// tag::logs[]

. Follow the {filebeat-ref}/filebeat-installation-configuration.html[Filebeat quick start]
. Add the following configuration to your `filebeat.yaml` file.

For Filebeat 7.16+

[source,yaml]
.filebeat.yaml
----
filebeat.inputs:
- type: filestream <1>
  paths: /path/to/logs.json
  parsers:
    - ndjson:
        overwrite_keys: true <2>
        add_error_key: true <3>
        expand_keys: true <4>

processors: <5>
  - add_host_metadata: ~
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
  - add_kubernetes_metadata: ~
----
<1> Use the filestream input to read lines from active log files.
<2> Values from the decoded JSON object overwrite the fields that {filebeat} normally adds (type, source, offset, etc.) in case of conflicts.
<3> {filebeat} adds an "error.message" and "error.type: json" key in case of JSON unmarshalling errors.
<4> {filebeat} will recursively de-dot keys in the decoded JSON, and expand them into a hierarchical object structure.
<5> Processors enhance your data. See {filebeat-ref}/filtering-and-enhancing-data.html[processors] to learn more.

For Filebeat < 7.16

[source,yaml]
.filebeat.yaml
----
filebeat.inputs:
- type: log
  paths: /path/to/logs.json
  json.keys_under_root: true
  json.overwrite_keys: true
  json.add_error_key: true
  json.expand_keys: true

processors:
- add_host_metadata: ~
- add_cloud_metadata: ~
- add_docker_metadata: ~
- add_kubernetes_metadata: ~
----
// end::logs[]


// tag::kubernetes[]
. Make sure your application logs to stdout/stderr.
. Follow the {filebeat-ref}/running-on-kubernetes.html[Run Filebeat on Kubernetes] guide.
. Enable https://www.elastic.co/guide/en/beats/filebeat/current/configuration-autodiscover-hints.html[hints-based autodiscover] (uncomment the corresponding section in `filebeat-kubernetes.yaml`).
. Add these annotations to your pods that log using ECS loggers.
  This will make sure the logs are parsed appropriately.

[source,yaml]
----
annotations:
  co.elastic.logs/json.overwrite_keys: true <1>
  co.elastic.logs/json.add_error_key: true <2>
  co.elastic.logs/json.expand_keys: true <3>
----
<1> Values from the decoded JSON object overwrite the fields that {filebeat} normally adds (type, source, offset, etc.) in case of conflicts.
<2> {filebeat} adds an "error.message" and "error.type: json" key in case of JSON unmarshalling errors.
<3> {filebeat} will recursively de-dot keys in the decoded JSON, and expand them into a hierarchical object structure.
// end::kubernetes[]


// tag::docker[]
. Make sure your application logs to stdout/stderr.
. Follow the {filebeat-ref}/running-on-docker.html[Run Filebeat on Docker] guide.
. Enable https://www.elastic.co/guide/en/beats/filebeat/current/configuration-autodiscover-hints.html[hints-based autodiscover].
. Add these labels to your containers that log using ECS loggers.
  This will make sure the logs are parsed appropriately.

[source,yaml]
.docker-compose.yml
----
labels:
  co.elastic.logs/json.overwrite_keys: true <1>
  co.elastic.logs/json.add_error_key: true <2>
  co.elastic.logs/json.expand_keys: true <3>
----
<1> Values from the decoded JSON object overwrite the fields that {filebeat} normally adds (type, source, offset, etc.) in case of conflicts.
<2> {filebeat} adds an "error.message" and "error.type: json" key in case of JSON unmarshalling errors.
<3> {filebeat} will recursively de-dot keys in the decoded JSON, and expand them into a hierarchical object structure.
// end::docker[]
